on:
  push:
    branches: 
    - develop

name: BuildProcess

env:
  AWS_ACCOUNT_ID: 858884198044
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN: arn:aws:iam::858884198044:role/github_deployment_develop
  BUILD_ENV: develop
  IMAGE_TAG: develop-${{ github.sha }}
  TASK_DEFINITION_FILE: simple-community-develop/api-main/task-definition.json
  DEPLOY_REPO_NAME: simple-community-deploy
  DEPLOY_REPO_REF: refs/heads/develop
  GIT_USER_NAME: Deploy
  GIT_USER_EMAIL: yoshinori.satoh.tokyo@gmail.com
  SLACK_WEBHOOK: ${{ secrets.SIMPLE_COMMUNITY_DEV_SLACK_WEBHOOK }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      status: ${{ job.status }}
    strategy:
      matrix:
        include: 
        - target: release
          ecr_repository: simple-community-api-main

    steps:        
    - name: Docker build
      uses: yoshinori-development/simple-community-actions-build@master
      with: 
        aws_role_arn: ${{ env.AWS_ROLE_ARN }}
        aws_region: ${{ env.AWS_REGION }}
        ecr_repository: ${{ matrix.ecr_repository }}
        image_tag: ${{ env.IMAGE_TAG }}
        build_target: ${{ matrix.target }}

  updateTaskDefinitions:
    name: UpdateTaskDefinitions
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      status: ${{ job.status }}

    steps:        
    - name: Update Task Definitions
      uses: yoshinori-development/simple-community-actions-update-taskdef@master
      with: 
        aws_account_id: ${{ env.AWS_ACCOUNT_ID }}
        aws_role_arn: ${{ env.AWS_ROLE_ARN }}
        aws_region: ${{ env.AWS_REGION }}
        image_tag: ${{ env.IMAGE_TAG }}
        deploy_repo_name: ${{ env.DEPLOY_REPO_NAME }}
        deploy_repo_ref: ${{ env.DEPLOY_REPO_REF }}
        task_definition_file: ${{ env.TASK_DEFINITION_FILE }} 
        targets: '[{ "container": "api", "ecr_repository": "simple-community-api-main" }]'

    # - name: Configure AWS Credentials
    #   uses: yoshinori-development/simple-community-actions-aws-creds@v1
    #   with: 
    #     aws_role_arn: ${{ env.AWS_ROLE_ARN }}
    #     aws_region: ${{ env.AWS_REGION }}

    # - name: Login to ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Checkout
    #   uses: actions/checkout@v2
    #   with:
    #     repository: ${{ github.repository_owner }}/${{ env.DEPLOY_REPO_NAME }}
    #     ref: ${{ env.DEPLOY_REPO_REF }}
    #     token: ${{ secrets.DEPLOY_PERSONAL_ACCESS_TOKEN }}

    # - name: update-task-definitions
    #   id: update-task-definitions
    #   run: |
    #     # ビルドターゲットが増えたらここを改修
    #     image=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.TARGET_RELEASE_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
    #     cat ${{ env.TASK_DEFINITION_FILE }} \
    #     | jq --arg image $image 'select(.containerDefinitions[].name == "${{ env.TARGET_RELEASE_CONTAINER_NAME }}").containerDefinitions[].image |= $image' \
    #     > tmp
    #     mv tmp ${{ env.TASK_DEFINITION_FILE }}

    # - name: git push
    #   id: git-push
    #   run: |
    #     git config --local user.email ${{ env.GIT_USER_EMAIL }}
    #     git config --local user.name ${{ env.GIT_USER_NAME }}
    #     git branch
    #     git add ${{ env.TASK_DEFINITION_FILE }}
    #     git commit -m "[UpdateImageTag] ${{ github.event.repositories.name }} $GITHUB_SHA"
    #     git push

  slackNotification:
    if: always()
    needs: [updateTaskDefinitions]
    name: workflow notification to slack
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ env.SLACK_WEBHOOK }}
