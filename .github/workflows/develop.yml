on:
  push:
    branches: 
    - develop

name: BuildProcess

env:
  AWS_REGION: ap-northeast-1
  AWS_ACCESS_KEY_ID: ${{ secrets.SIMPLE_COMMUNITY_DEV_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SIMPLE_COMMUNITY_DEV_AWS_SECRET_ACCESS_KEY }}
  ECR_REPO_NAME: simple-community-api-core
  BUILD_ENV: develop
  IMAGE_TAG: develop-${{ github.sha }}
  SLACK_WEBHOOK: ${{ secrets.SIMPLE_COMMUNITY_DEV_SLACK_WEBHOOK }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      status: ${{ job.status }}

    strategy:
      matrix:
        target: [release]
        include: 
        - target: release
          ecr_repository: simple-community-api-core

    steps:        
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to ECR
      id: build
      env:
        BUILD_ENV: ${{ env.BUILD_ENV }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ matrix.ecr_repository }}
      # 同じイメージタグを再度pushしないため、既にこのコミットのgit.shaのタグが付けられたイメージが存在していればスキップ
      run: |
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG && true
        if [ "`docker image ls -q $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG`" ]; then
          echo "Image $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG already exist."
          echo "Skip build and push image."
          exit 0
        fi

        DOCKER_BUILDKIT=1 docker build \
          --target ${{ matrix.target }} \
          --build-arg ENV=$BUILD_ENV \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  slackNotification:
    if: always()
    needs: [build]
    name: workflow notification to slack
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ env.SLACK_WEBHOOK }}
